"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[797],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=n,k=u["".concat(p,".").concat(m)]||u[m]||c[m]||o;return r?a.createElement(k,i(i({ref:t},d),{},{components:r})):a.createElement(k,i({ref:t},d))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9344:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const o={},i="Tinker Edge R",l={unversionedId:"products/Tinker-Edge-R",id:"products/Tinker-Edge-R",title:"Tinker Edge R",description:"1. Flash old version image",source:"@site/docs/products/Tinker-Edge-R.md",sourceDirName:"products",slug:"/products/Tinker-Edge-R",permalink:"/docs/products/Tinker-Edge-R",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tinker Board (S) (R2.0)",permalink:"/docs/products/Tinker-Board-S-R2.0-&-R2.0,-Tinker-Board-&-S"},next:{title:"Tinker V",permalink:"/docs/products/Tinker-V"}},p={},s=[{value:"2.1 GPIO Application note",id:"21-gpio-application-note",level:2},{value:"2.2 FAN control",id:"22-fan-control",level:2},{value:"3.1 ASUS IoT API",id:"31-asus-iot-api",level:2}],d={toc:s},u="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"tinker-edge-r"},"Tinker Edge R"),(0,n.kt)("h1",{id:"1-flash-image"},"1. Flash Image"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Flash old version image"),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Flash the image released before 2021/8/1")),(0,n.kt)("p",{parentName:"li"},"Please refer to the following web page. "),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://tinker-board.asus.com/doc_er.html#started"},"https://tinker-board.asus.com/doc_er.html#started")))),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Flash image from old version to new version"),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Flash the image from versions before 2021/8/1 to versions after 2021/8/1")),(0,n.kt)("p",{parentName:"li"},"Pleaase refer to the following file."),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/TinkerBoard/TinkerBoard/files/12801859/TinkerEdgeR-Flash.Image-UMS.mode.pdf"},"TinkerEdgeR-Flash Image-UMS mode.pdf")))),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Flash new version image"),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Flash the image released after 2021/8/1")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"*Booting  from  onboard  eMMC")),(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},"NOTE: Booting from the onboard eMMC is only available for models with eMMC.")),(0,n.kt)("p",{parentName:"li"},"Requirement:"),(0,n.kt)("p",{parentName:"li"},"\u2022 1 x Type-C\xae cable with data transfer function"),(0,n.kt)("p",{parentName:"li"},"\u2022 1 x Power supply"),(0,n.kt)("p",{parentName:"li"},"\u2022 1 x Monitor"),(0,n.kt)("p",{parentName:"li"},"\u2022 1 x Keyboard and Mouse set"),(0,n.kt)("p",{parentName:"li"},"Setting Up:"),(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Make sure there is no jumper on the Recovery header. ")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Connect the Tinker Edge R to a PC using a Type-C\xae cable.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Connect the power adapter to the Tinker Edge R.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Download the TinkerOS image from the Tinker Board website (",(0,n.kt)("a",{parentName:"p",href:"https://tinker-board.asus.com/download-list.html?product=tinker-edge-r"},"https://tinker-board.asus.com/download-list.html?product=tinker-edge-r"),") and burn it into the Tinker Board using a third-party ISO software, such as ",(0,n.kt)("a",{parentName:"p",href:"https://www.balena.io/etcher/"},"balenaEtcher"),".")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"After the TinkerOS image is successfully burned, disconnect all cables from the Tinker Board.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Connect the power supply, keyboard, mouse, and monitor to your Tinker Board to boot up."))))),(0,n.kt)("h1",{id:"2-hardware-guide"},"2. Hardware Guide"),(0,n.kt)("h2",{id:"21-gpio-application-note"},"2.1 GPIO Application note"),(0,n.kt)("p",null,"Due to hardware design limitations of certain pins, some designs incorporate level shifters, so there are a few things to keep in mind when using them."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The location of pins with level shifter:"),(0,n.kt)("li",{parentName:"ul"},"Pins number: 7, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 26, 29, 31, 35, 38, 40\n",(0,n.kt)("img",{parentName:"li",src:"https://user-images.githubusercontent.com/97945168/194475856-ebcb8127-677e-4edc-9fd5-7b80c5bd22d5.png",alt:"image"}))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Precautions for use:")),(0,n.kt)("p",null,"If used as a GPI"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A pull-up/ pull-down resistor is needed to automatically restore the default state."),(0,n.kt)("li",{parentName:"ul"},"If default status=1, need to add an external pull-up resistor and must be less than 1.65K\u03a9."),(0,n.kt)("li",{parentName:"ul"},"If default status=0, it is recommended to use 100K\u03a9 resistor to pull-down."),(0,n.kt)("li",{parentName:"ul"},"This pin can no longer be set to GPO by the software (unless the external resistor design is modified!).")),(0,n.kt)("p",null,"Requirements in the datasheet for input:"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/97945168/192922029-1f36e537-d083-43f2-a102-5ac168efdad1.png",alt:"1"})),(0,n.kt)("p",null,"Recommended circuits:"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/97945168/192922637-8e17a1a8-ebfb-49c1-acc8-1bc7e333636c.png",alt:"2"})),(0,n.kt)("h2",{id:"22-fan-control"},"2.2 FAN control"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Control GPIO4_D6 the high speed or low speed by software")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"High speed setting on FAN_SPD_CTRL")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'sudo echo "158" > /sys/class/gpio/export\nsudo echo "out" > /sys/class/gpio/gpio158/direction\nsudo echo "1" /sys/class/gpio/gpio154/value\n')),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Low speed setting on FAN_SPD_CTRL")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'sudo echo "158" > /sys/class/gpio/export\nsudo echo "out" > /sys/class/gpio/gpio158/direction\nsudo echo "0" > /sys/class/gpio/gpio158/value\n')),(0,n.kt)("h1",{id:"3-others"},"3. Others"),(0,n.kt)("h2",{id:"31-asus-iot-api"},"3.1 ASUS IoT API"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://tinker-board.asus.com/images/doc/download/Asus_Connectivity_Manager_v1.0_20220208.pdf"},"ASUS Connectivity Manager Command Line Interface User Manual V1.0"))))}c.isMDXComponent=!0}}]);