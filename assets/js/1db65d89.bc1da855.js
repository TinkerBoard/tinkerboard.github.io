"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[659],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>g});var a=n(7294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var o=a.createContext({}),d=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=d(t.components);return a.createElement(o.Provider,{value:e},t.children)},u="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,o=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),u=d(n),k=l,g=u["".concat(o,".").concat(k)]||u[k]||s[k]||r;return n?a.createElement(g,i(i({ref:e},m),{},{components:n})):a.createElement(g,i({ref:e},m))}));function g(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=k;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[u]="string"==typeof t?t:l,i[1]=p;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1677:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var a=n(7462),l=(n(7294),n(3905));const r={sidebar_position:3},i="User Guide",p={unversionedId:"user-guide",id:"user-guide",title:"User Guide",description:"1. Boot modes",source:"@site/docs/user-guide.md",sourceDirName:".",slug:"/user-guide",permalink:"/docs/user-guide",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Tinker Board 3N",permalink:"/docs/products/tinker_board_3n"},next:{title:"Developer Guide",permalink:"/docs/developer-guide"}},o={},d=[{value:"1. Boot modes",id:"1-boot-modes",level:2},{value:"UMS mode",id:"ums-mode",level:3},{value:"Boot the board into the UMS mode from the internal storage (eMMC)",id:"boot-the-board-into-the-ums-mode-from-the-internal-storage-emmc",level:4},{value:"Boot the device into the UMS from a SD card",id:"boot-the-device-into-the-ums-from-a-sd-card",level:4},{value:"Without UMS mode",id:"without-ums-mode",level:4},{value:"2. Flash Image",id:"2-flash-image",level:2},{value:"This is general for Tinker Board (S), Tinker Board (S) R2.0 &amp; Tinker Board 2 seires.",id:"this-is-general-for-tinker-board-s-tinker-board-s-r20--tinker-board-2-seires",level:3},{value:"Booting from external Micro SD card",id:"booting-from-external-micro-sd-card",level:3},{value:"Booting  from  onboard  eMMC",id:"booting--from--onboard--emmc",level:3},{value:"3. GPIO",id:"3-gpio",level:2},{value:"GPIO Config Table for Tinker Board (S) / Tinker Board (S) R2.0:",id:"gpio-config-table-for-tinker-board-s--tinker-board-s-r20",level:3},{value:"GPIO Config Table for Tinker Board 2 series:",id:"gpio-config-table-for-tinker-board-2-series",level:3},{value:"Sample code for Tinker Board (S) / Tinker Board (S) R2.0:",id:"sample-code-for-tinker-board-s--tinker-board-s-r20",level:3},{value:"Sample code for Tinker Board 2 series:",id:"sample-code-for-tinker-board-2-series",level:3},{value:"Application note for Tinker Board 2 series:",id:"application-note-for-tinker-board-2-series",level:3},{value:"Application note for Tinker Edge R:",id:"application-note-for-tinker-edge-r",level:3},{value:"4. Power management tool",id:"4-power-management-tool",level:2},{value:"Debian only",id:"debian-only",level:3},{value:"5. Swapfile",id:"5-swapfile",level:2},{value:"6. OpenCV how to install",id:"6-opencv-how-to-install",level:2},{value:"Install library from Debian repo",id:"install-library-from-debian-repo",level:3},{value:"Install OpenCV manually",id:"install-opencv-manually",level:3},{value:"7. Tinker Config Application",id:"7-tinker-config-application",level:2},{value:"Introduction",id:"introduction",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Features",id:"features",level:3},{value:"8. Fan Control",id:"8-fan-control",level:2}],m={toc:d},u="wrapper";function s(t){let{components:e,...n}=t;return(0,l.kt)(u,(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"user-guide"},"User Guide"),(0,l.kt)("h2",{id:"1-boot-modes"},"1. Boot modes"),(0,l.kt)("h3",{id:"ums-mode"},"UMS mode"),(0,l.kt)("p",null,"The USB mass storage class is a USB function which can be used to export and share the storage. When the board is booted into the UMS mode, it shares the internal storage (eMMC) to the connected PC just like a hard drive connected to the PC. Then, the users can use the software such as ",(0,l.kt)("a",{parentName:"p",href:"https://www.balena.io/etcher/"},"balenaEtcher")," to flash the image into the internal storage (eMMC)."),(0,l.kt)("p",null,"The UMS function is implemented in u-boot. During the u-boot boot-up stage, it will check whether the board is connected to a PC or not. If connected to a PC, the board will enter UMS mode automatically. If not, the board will follow the boot priority to continue the boot process."),(0,l.kt)("h4",{id:"boot-the-board-into-the-ums-mode-from-the-internal-storage-emmc"},"Boot the board into the UMS mode from the internal storage (eMMC)"),(0,l.kt)("p",null,"If the u-boot in the internal storage (eMMC) is still workable with the UMS function, the follow the below steps."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Make sure there is no SD card installed on the board."),(0,l.kt)("li",{parentName:"ol"},"Connect the board with a PC via USB and then power on the board."),(0,l.kt)("li",{parentName:"ol"},"Then, the board will boot into the UMS mode automatically.")),(0,l.kt)("h4",{id:"boot-the-device-into-the-ums-from-a-sd-card"},"Boot the device into the UMS from a SD card"),(0,l.kt)("p",null,"If there is no workable u-boot in the internal storage (eMMC), in this case the board can not boot into the UMS mode from the internal storage (eMMC), you can boot the board into the UMS mode from a SD card."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Flash the image (with u-boot including UMS function) into a SD card."),(0,l.kt)("li",{parentName:"ol"},"Install the SD card to the board."),(0,l.kt)("li",{parentName:"ol"},"Connect the board with a PC via USB and then power on the board."),(0,l.kt)("li",{parentName:"ol"},"Then, the board will boot into the UMS mode automatically. (You may need to enable the MASKROM jumper to force the device to boot from SD, jump out the eMMC.)")),(0,l.kt)("h4",{id:"without-ums-mode"},"Without UMS mode"),(0,l.kt)("p",null,"Recovery from SD\u2019s image system & without the PC mode "),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Plug the Jumper on the Maskrom mode.\n(force to boot from SD, jump out the eMMC)"),(0,l.kt)("li",{parentName:"ol"},"Flash the Image (any can bootable) to SD card."),(0,l.kt)("li",{parentName:"ol"},"Plug the SD card to the board."),(0,l.kt)("li",{parentName:"ol"},"Booting the board.\nIt would boot up to the RootFS."),(0,l.kt)("li",{parentName:"ol"},"use either command dd or methods to flash new image file to eMMC(mmcblk1).")),(0,l.kt)("h2",{id:"2-flash-image"},"2. Flash Image"),(0,l.kt)("h3",{id:"this-is-general-for-tinker-board-s-tinker-board-s-r20--tinker-board-2-seires"},"This is general for Tinker Board (S), Tinker Board (S) R2.0 & Tinker Board 2 seires."),(0,l.kt)("p",null,"You can use the software such as balenaEthcher to flash the images into the SD cards or the internal storage (eMMC) on the board when the board is booted into the UMS mode."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Download the software from ",(0,l.kt)("a",{parentName:"li",href:"https://www.balena.io/etcher/"},"balena.io"),"."),(0,l.kt)("li",{parentName:"ol"},"Run balenaEtcher and select the image file."),(0,l.kt)("li",{parentName:"ol"},"Select the target."),(0,l.kt)("li",{parentName:"ol"},"Click on Flash to start flashing.")),(0,l.kt)("p",null,"Alternatively, you can also use the command dd. Run the following command, replacing /dev/sdx with your drive, e.g. /dev/sdc. (Do not append a partition number, so do not use something like /dev/sdc1. You can use the command lsblk to find out the target. Make sure that it is not mounted.)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"dd bs=4M if=/path/to/image of=/dev/sdx status=progress && sync\n")),(0,l.kt)("h3",{id:"booting-from-external-micro-sd-card"},"Booting from external Micro SD card"),(0,l.kt)("p",null,"Requirement:"),(0,l.kt)("p",null,"\u2022 1 x Micro SD card with at least 8GB capacity"),(0,l.kt)("p",null,"\u2022 1 x Power supply"),(0,l.kt)("p",null,"\u2022 1 x Monitor"),(0,l.kt)("p",null,"\u2022 1 x Keyboard and Mouse set"),(0,l.kt)("p",null,"Setting Up:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Insert the micro SD card into a Windows\xae PC.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Download the TinkerOS image from the Tinker Board website (",(0,l.kt)("a",{parentName:"p",href:"https://tinker-board.asus.com/download.html"},"https://tinker-board.asus.com/download.html"),") and burn it into the micro SD card using a third-party ISO software, such as Etcher.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Insert the bootable micro SD card into your Tinker Board, then connect the power supply, keyboard, mouse, and monitor to boot up."))),(0,l.kt)("h3",{id:"booting--from--onboard--emmc"},"Booting  from  onboard  eMMC"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"NOTE: Booting from the onboard eMMC is only available for models with eMMC.")),(0,l.kt)("p",null,"Requirement:"),(0,l.kt)("p",null,"\u2022 1 x USB cable with data transfer function (Micro USB or Type-C\xae, by SKU)"),(0,l.kt)("p",null,"\u2022 1 x Power supply"),(0,l.kt)("p",null,"\u2022 1 x Monitor"),(0,l.kt)("p",null,"\u2022 1 x Keyboard and Mouse set"),(0,l.kt)("p",null,"Setting Up:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Connect the Tinker Board to a PC using a USB cable.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Connect the power adapter to the Tinker Board.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Download the TinkerOS image from the Tinker Board website (",(0,l.kt)("a",{parentName:"p",href:"https://tinker-board.asus.com/download"},"https://tinker-board.asus.com/download"),". html) and burn it into the Tinker Board using a third-party ISO software, such as ",(0,l.kt)("a",{parentName:"p",href:"https://www.balena.io/etcher/"},"balenaEtcher"),".")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"After the TinkerOS image is successfully burned, disconnect all cables from the Tinker Board.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Connect the power supply, keyboard, mouse, and monitor to your Tinker Board to boot up."))),(0,l.kt)("h2",{id:"3-gpio"},"3. GPIO"),(0,l.kt)("h3",{id:"gpio-config-table-for-tinker-board-s--tinker-board-s-r20"},"GPIO Config Table for Tinker Board (S) / Tinker Board (S) R2.0:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Chip,line"),(0,l.kt)("th",{parentName:"tr",align:null},"Device Path"),(0,l.kt)("th",{parentName:"tr",align:null},"GPIO number"),(0,l.kt)("th",{parentName:"tr",align:null},"Function2"),(0,l.kt)("th",{parentName:"tr",align:null},"Function1"),(0,l.kt)("th",{parentName:"tr",align:null},"GPIO"),(0,l.kt)("th",{parentName:"tr",align:null},"Pin#"),(0,l.kt)("th",{parentName:"tr",align:null},"Pin#"),(0,l.kt)("th",{parentName:"tr",align:null},"GPIO"),(0,l.kt)("th",{parentName:"tr",align:null},"Function1"),(0,l.kt)("th",{parentName:"tr",align:null},"Function2"),(0,l.kt)("th",{parentName:"tr",align:null},"GPIO number"),(0,l.kt)("th",{parentName:"tr",align:null},"Device Path"),(0,l.kt)("th",{parentName:"tr",align:null},"Chip,line"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"VCC3.3V_IO"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"VCC5V_SYS"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8,4"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio252 I2C:/dev/i2c-1"),(0,l.kt)("td",{parentName:"tr",align:null},"252"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"I2C1_SDA"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO8_A4"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"VCC5V_SYS"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8,5"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio253 I2C:/dev/i2c-1"),(0,l.kt)("td",{parentName:"tr",align:null},"253"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"I2C1_SCL"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO8_A5"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0,17"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio17"),(0,l.kt)("td",{parentName:"tr",align:null},"17"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"TEST_CLKOUT"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO0_C1"),(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO5_B1"),(0,l.kt)("td",{parentName:"tr",align:null},"UART1_TXD"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"161"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio161 UART:/dev/ttyS1"),(0,l.kt)("td",{parentName:"tr",align:null},"5,9")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO5_B0"),(0,l.kt)("td",{parentName:"tr",align:null},"UART1_RXD"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"160"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio160 UART:/dev/ttyS1"),(0,l.kt)("td",{parentName:"tr",align:null},"5,8")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5,12"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio164 SPI:/dev/spidev0 UART:/dev/ttyS4"),(0,l.kt)("td",{parentName:"tr",align:null},"164"),(0,l.kt)("td",{parentName:"tr",align:null},"UART4_CTSN"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI0_CLK"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO5_B4"),(0,l.kt)("td",{parentName:"tr",align:null},"11"),(0,l.kt)("td",{parentName:"tr",align:null},"12"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO6_A0"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S_SCLK"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"184"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio184"),(0,l.kt)("td",{parentName:"tr",align:null},"6,0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5,14"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio166 SPI:/dev/spidev0 UART:/dev/ttyS4"),(0,l.kt)("td",{parentName:"tr",align:null},"166"),(0,l.kt)("td",{parentName:"tr",align:null},"UART4_TXD"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI0_TXD"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO5_B6"),(0,l.kt)("td",{parentName:"tr",align:null},"13"),(0,l.kt)("td",{parentName:"tr",align:null},"14"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5,15"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio167 SPI:/dev/spidev0 UART:/dev/ttyS4"),(0,l.kt)("td",{parentName:"tr",align:null},"167"),(0,l.kt)("td",{parentName:"tr",align:null},"UART4_RXD"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI0_RXD"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO5_B7"),(0,l.kt)("td",{parentName:"tr",align:null},"15"),(0,l.kt)("td",{parentName:"tr",align:null},"16"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO5_B2"),(0,l.kt)("td",{parentName:"tr",align:null},"UART1_CTSN"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"162"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio162 UART:/dev/ttyS1"),(0,l.kt)("td",{parentName:"tr",align:null},"5,10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"VCC3.3V_IO"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"17"),(0,l.kt)("td",{parentName:"tr",align:null},"18"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO5_B3"),(0,l.kt)("td",{parentName:"tr",align:null},"UART1_RTSN"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"163"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio163 UART:/dev/ttyS1"),(0,l.kt)("td",{parentName:"tr",align:null},"5,11")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8,9"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio257 SPI:/dev/spidev2"),(0,l.kt)("td",{parentName:"tr",align:null},"257"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI2_TXD"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO8_B1"),(0,l.kt)("td",{parentName:"tr",align:null},"19"),(0,l.kt)("td",{parentName:"tr",align:null},"20"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8,8"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio256 SPI:/dev/spidev2"),(0,l.kt)("td",{parentName:"tr",align:null},"256"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI2_RXD"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO8_B0"),(0,l.kt)("td",{parentName:"tr",align:null},"21"),(0,l.kt)("td",{parentName:"tr",align:null},"22"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO5_C3"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"171"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio171"),(0,l.kt)("td",{parentName:"tr",align:null},"5,19")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8,6"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio254 SPI:/dev/spidev2"),(0,l.kt)("td",{parentName:"tr",align:null},"254"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI2_CLK"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO8_A6"),(0,l.kt)("td",{parentName:"tr",align:null},"23"),(0,l.kt)("td",{parentName:"tr",align:null},"24"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO8_A7"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI2_CSN0"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"255"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio255 SPI:/dev/spidev2.0"),(0,l.kt)("td",{parentName:"tr",align:null},"8,7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"25"),(0,l.kt)("td",{parentName:"tr",align:null},"26"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO8_A3"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI2_CSN1"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"251"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio251 SPI:/dev/spidev2.1"),(0,l.kt)("td",{parentName:"tr",align:null},"8,3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7,17"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio233 I2C:/dev/i2c-4"),(0,l.kt)("td",{parentName:"tr",align:null},"233"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"I2C4_SDA"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO7_C1"),(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"28"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO7_C2"),(0,l.kt)("td",{parentName:"tr",align:null},"I2C4_SCL"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"234"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio234 I2C:/dev/i2c-4"),(0,l.kt)("td",{parentName:"tr",align:null},"7,18")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5,13"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio165 SPI:/dev/spidev0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"165"),(0,l.kt)("td",{parentName:"tr",align:null},"UART4_RTSN"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI0_CSN0"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO5_B5"),(0,l.kt)("td",{parentName:"tr",align:null},"29"),(0,l.kt)("td",{parentName:"tr",align:null},"30"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5,16"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio168 SPI:/dev/spidev0.1"),(0,l.kt)("td",{parentName:"tr",align:null},"168"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI0_CSN1"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO5_C0"),(0,l.kt)("td",{parentName:"tr",align:null},"31"),(0,l.kt)("td",{parentName:"tr",align:null},"32"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO7_C7"),(0,l.kt)("td",{parentName:"tr",align:null},"UART2_TXD"),(0,l.kt)("td",{parentName:"tr",align:null},"PWM"),(0,l.kt)("td",{parentName:"tr",align:null},"239"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio239 UART:/dev/ttyS2 PWM:/sys/class/pwm/pwmchip3"),(0,l.kt)("td",{parentName:"tr",align:null},"7,23")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7,22"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio238 UART:/dev/ttyS2 PWM:/sys/class/pwm/pwmchip2"),(0,l.kt)("td",{parentName:"tr",align:null},"238"),(0,l.kt)("td",{parentName:"tr",align:null},"PWM2"),(0,l.kt)("td",{parentName:"tr",align:null},"UART2_RXD"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO7_C6"),(0,l.kt)("td",{parentName:"tr",align:null},"33"),(0,l.kt)("td",{parentName:"tr",align:null},"34"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6,1"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio185"),(0,l.kt)("td",{parentName:"tr",align:null},"185"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S_LRCKRX"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO6_A1"),(0,l.kt)("td",{parentName:"tr",align:null},"35"),(0,l.kt)("td",{parentName:"tr",align:null},"36"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S_LRCKRX"),(0,l.kt)("td",{parentName:"tr",align:null},"UART3_RXD"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"233"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio223 UART:/dev/ttyS3"),(0,l.kt)("td",{parentName:"tr",align:null},"7,7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7,8"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio224 UART:/dev/ttyS3"),(0,l.kt)("td",{parentName:"tr",align:null},"224"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"UART3_TXD"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO7_B0"),(0,l.kt)("td",{parentName:"tr",align:null},"37"),(0,l.kt)("td",{parentName:"tr",align:null},"38"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO6_A3"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S_SDI"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"187"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio187"),(0,l.kt)("td",{parentName:"tr",align:null},"6,3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"39"),(0,l.kt)("td",{parentName:"tr",align:null},"40"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO6_A4"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S_SDO0"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"188"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO:/sys/class/gpio/gpio188"),(0,l.kt)("td",{parentName:"tr",align:null},"6,4")))),(0,l.kt)("h3",{id:"gpio-config-table-for-tinker-board-2-series"},"GPIO Config Table for Tinker Board 2 series:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Chip,line"),(0,l.kt)("th",{parentName:"tr",align:null},"Device Path"),(0,l.kt)("th",{parentName:"tr",align:null},"Function2"),(0,l.kt)("th",{parentName:"tr",align:null},"Function1"),(0,l.kt)("th",{parentName:"tr",align:null},"GPIO"),(0,l.kt)("th",{parentName:"tr",align:null},"Pin#"),(0,l.kt)("th",{parentName:"tr",align:null},"Pin#"),(0,l.kt)("th",{parentName:"tr",align:null},"GPIO"),(0,l.kt)("th",{parentName:"tr",align:null},"Function1"),(0,l.kt)("th",{parentName:"tr",align:null},"Function2"),(0,l.kt)("th",{parentName:"tr",align:null},"Device Path"),(0,l.kt)("th",{parentName:"tr",align:null},"Chip,line"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"VCC3.3V_IO"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"VCC5V_SYS"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2,9"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio73 I2C: /dev/i2c-6"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"I2C6_SDA"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_B1"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"VCC5V_SYS"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2,10"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio74 I2C: /dev/i2c-6"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"I2C6_SCL"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_B2"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0,8"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio8"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"TEST_CLKOUT2"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_B0"),(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_C1"),(0,l.kt)("td",{parentName:"tr",align:null},"UART0_TXD"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio81 UART: /dev/ttyS0"),(0,l.kt)("td",{parentName:"tr",align:null},"2,17")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO0_C0"),(0,l.kt)("td",{parentName:"tr",align:null},"UART0_RXD"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio80 UART: /dev/ttyS0"),(0,l.kt)("td",{parentName:"tr",align:null},"2, 16")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2,19"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio83 UART: /dev/ttyS0"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"UART0_RTSN"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_C3"),(0,l.kt)("td",{parentName:"tr",align:null},"11"),(0,l.kt)("td",{parentName:"tr",align:null},"12"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO3_D0"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S0_SCLK"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio120"),(0,l.kt)("td",{parentName:"tr",align:null},"3,24")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2,21"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio85 SPI: /dev/spidev5"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI5_TX"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_C5"),(0,l.kt)("td",{parentName:"tr",align:null},"13"),(0,l.kt)("td",{parentName:"tr",align:null},"14"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2,20"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio84 SPI: /dev/spidev5"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI5_RX"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_C4"),(0,l.kt)("td",{parentName:"tr",align:null},"15"),(0,l.kt)("td",{parentName:"tr",align:null},"16"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_C6"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI5_CLK"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio86 SPI: /dev/spidev5"),(0,l.kt)("td",{parentName:"tr",align:null},"2,22")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"VCC3.3V_IO"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"17"),(0,l.kt)("td",{parentName:"tr",align:null},"18"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_C7"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI5_CSN"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio87 SPI: /dev/spidev5.0"),(0,l.kt)("td",{parentName:"tr",align:null},"2, 23")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1,8"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio40 SPI: /dev/spidev1 UART: /dev/ttyS4"),(0,l.kt)("td",{parentName:"tr",align:null},"UART4_TXD"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI1_TXD"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO1_B0"),(0,l.kt)("td",{parentName:"tr",align:null},"19"),(0,l.kt)("td",{parentName:"tr",align:null},"20"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1,7"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio39 SPI: /dev/spidev1 UART: /dev/ttyS4"),(0,l.kt)("td",{parentName:"tr",align:null},"UART4_RXD"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI1_RXD"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO1_A7"),(0,l.kt)("td",{parentName:"tr",align:null},"21"),(0,l.kt)("td",{parentName:"tr",align:null},"22"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO3_D4"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S0_SDO3"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio124"),(0,l.kt)("td",{parentName:"tr",align:null},"3,28")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1,9"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio41 SPI: /dev/spidev1"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI1_CLK"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO1_B1"),(0,l.kt)("td",{parentName:"tr",align:null},"23"),(0,l.kt)("td",{parentName:"tr",align:null},"24"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO1_B2"),(0,l.kt)("td",{parentName:"tr",align:null},"SPI1_CSN"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio42 SPI: /dev/spidev1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"1,10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"25"),(0,l.kt)("td",{parentName:"tr",align:null},"26"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO0_A6"),(0,l.kt)("td",{parentName:"tr",align:null},"PWM3A_IR"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio6 PWM: /sys/class/pwm/pwmchip3"),(0,l.kt)("td",{parentName:"tr",align:null},"0,6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2,7"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio71 I2C: /dev/i2c-7"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"I2C7_SDA"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_A7"),(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"28"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_B0"),(0,l.kt)("td",{parentName:"tr",align:null},"I2C7_SCL"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio72 I2C: /dev/i2c-7"),(0,l.kt)("td",{parentName:"tr",align:null},"2,8")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3,30"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio126"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S0_SDO1"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO3_D6"),(0,l.kt)("td",{parentName:"tr",align:null},"29"),(0,l.kt)("td",{parentName:"tr",align:null},"30"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3,29"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio125"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S0_SDO2"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO3_D5"),(0,l.kt)("td",{parentName:"tr",align:null},"31"),(0,l.kt)("td",{parentName:"tr",align:null},"32"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO4_C2"),(0,l.kt)("td",{parentName:"tr",align:null},"PWM0"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio146 PWM: /sys/class/pwm/pwmchip0"),(0,l.kt)("td",{parentName:"tr",align:null},"4,18")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4,22"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio150 PWM: /sys/class/pwm/pwmchip1"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"PWM1"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO4_C6"),(0,l.kt)("td",{parentName:"tr",align:null},"33"),(0,l.kt)("td",{parentName:"tr",align:null},"34"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3,25"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio121"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S0_FS"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO3_D1"),(0,l.kt)("td",{parentName:"tr",align:null},"35"),(0,l.kt)("td",{parentName:"tr",align:null},"36"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO2_C2"),(0,l.kt)("td",{parentName:"tr",align:null},"UART0_CTSN"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio82 UART: /dev/ttyS0"),(0,l.kt)("td",{parentName:"tr",align:null},"2,18")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4,21"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio149"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"SPDIF_TX"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO4_C5"),(0,l.kt)("td",{parentName:"tr",align:null},"37"),(0,l.kt)("td",{parentName:"tr",align:null},"38"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO3_D3"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S0_SDI0"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio123"),(0,l.kt)("td",{parentName:"tr",align:null},"3,27")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GND"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"39"),(0,l.kt)("td",{parentName:"tr",align:null},"40"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO3_D7"),(0,l.kt)("td",{parentName:"tr",align:null},"I2S0_SDO0"),(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"GPIO: /sys/class/gpio/gpio127"),(0,l.kt)("td",{parentName:"tr",align:null},"3,31")))),(0,l.kt)("h3",{id:"sample-code-for-tinker-board-s--tinker-board-s-r20"},"Sample code for Tinker Board (S) / Tinker Board (S) R2.0:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"For GPIO API, please refer to the documentation on the Tinker Board website:",(0,l.kt)("br",{parentName:"p"}),"\n","",(0,l.kt)("a",{parentName:"p",href:"https://tinker-board.asus.com/doc_tbs.html#gpio"},"https://tinker-board.asus.com/doc_tbs.html#gpio"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"WiringPi C:",(0,l.kt)("br",{parentName:"p"}),"\n","",(0,l.kt)("a",{parentName:"p",href:"https://github.com/TinkerBoard/gpio_lib_c"},"https://github.com/TinkerBoard/gpio_lib_c"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"ASUS.GPIO Python:",(0,l.kt)("br",{parentName:"p"}),"\n","Install gpio_lib_python steps:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"````\ngit clone https://github.com/TinkerBoard/gpio_lib_python.git\nsudo apt-get install python-dev python2.7-dev python3-dev\ncd gpio_lib_python/\nsudo python3 setup.py install\nsudo python setup.py install\npython3 -c 'import ASUS; print(ASUS.__path__)'\ncd test/\npython3 GPIO_IN_OUT_test.py\n````\n")),(0,l.kt)("p",{parentName:"li"},"*please note that the .py has be located somewhere other than the source directory, otherwise the module will not be recognized: error ImportError: No module named 'ASUS.GPIO' "))),(0,l.kt)("h3",{id:"sample-code-for-tinker-board-2-series"},"Sample code for Tinker Board 2 series:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"C:")),(0,l.kt)("p",null,"C is a general-purpose, imperative computer programming language, supporting structured programming, lexical variable scope and recursion, while a static type system prevents many unintended operations."),(0,l.kt)("p",null,"Ps: The GPIO WiringPi for C library has been installed in Tinker Board 2 series by default. Step 1 and 2 can be ignored."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Navigate to folder")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"cd /usr/local/share/gpio_lib_c_rk3399")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Install C GPIO library for Tinker Board 2 series")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"sudo ./build")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Check install success or not")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"gpio readall")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/89904531/154948131-d2750741-b174-4a2a-add4-d81e8bfe6945.png",alt:"Tinker 2S_GPIO"})),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"Reference codes")),(0,l.kt)("p",null,"There\u2019re few sample codes under this folder"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"/usr/local/share/gpio_lib_c_rk3399/examples")),(0,l.kt)("p",null,"To make a simple script create a file with \u2018nano blink.c\u2019 and input the following code."),(0,l.kt)("p",null,"Sample LED blink: Please reference the pin map results about gpio readall."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"GPIO")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'#include <stdio.h>\n#include <wiringPi.h>\n\n// LED Pin - wiringPi pin 30 is GPIO2A7 71.\n#define LED     30\n\nint main (void)\n{\n  printf ("Tinker board 2 blink\\n") ;\n  wiringPiSetup () ;\n  pinMode (LED, OUTPUT) ;\n\nfor (;;)\n  {\n    digitalWrite (LED, HIGH) ;  // On\n    delay (500) ;               // mS\n    digitalWrite (LED, LOW) ;   // Off\n    delay (500) ;\n  }\n\n  return 0 ;\n}\n')),(0,l.kt)("p",null,"To run the script run the command:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"sudo gcc -o blink blink.c -lwiringPi")),(0,l.kt)("p",null,"To run the newly compiled led run the command \u2018",(0,l.kt)("inlineCode",{parentName:"p"},"sudo ./blink"),"\u2019 "),(0,l.kt)("p",null,".sh file for Tinker_2S_Test_input_gpio: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/TinkerBoard/TinkerBoard/files/8109019/Tinker_2S_Test_input_gpio.zip"},"https://github.com/TinkerBoard/TinkerBoard/files/8109019/Tinker_2S_Test_input_gpio.zip")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Python:")),(0,l.kt)("p",null,"Python is a programming language that lets you work quickly and integrate systems more effectively."),(0,l.kt)("p",null,"Ps: The ASUS.GPIO for Python library has been installed in Tinker Board 2 series by default. Step 1 and 2 can be ignored."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Please refer to the pin mapping table above")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Navigate to folder"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"cd /usr/local/share/gpio_lib_python_rk3399")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Install Python GPIO library for Tinker Board 2 series for python and python3")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\nsudo python setup.py install\n\nsudo python3 setup.py install\n")),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"Reference codes")),(0,l.kt)("p",null,"There\u2019re few sample codes under this folder"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"cd /usr/local/share/gpio_lib_python_rk3399/test")),(0,l.kt)("p",null,"To check the sample code by \u2018",(0,l.kt)("inlineCode",{parentName:"p"},"nano forloop.py"),"\u2019 and you can see the following codes."),(0,l.kt)("p",null,"Sample forloop functions: set the all gpio value to high and then set all gpio value to low"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"import ASUS.GPIO as GPIO\nimport unittest\nimport time\n# to use ASUS tinker board pin numbers\nGPIO.setmode(GPIO.BOARD)\n\n# set up GPIO output channel, we set GPIO4 (Pin 7) to OUTPUT\n\nn = 40\n\nfor counter in range (1, n+1):\n        if counter == 1 or \\\n           counter == 2 or \\\n           counter == 4 or \\\n           counter == 6 or \\\n           counter == 9 or \\\n           counter == 14 or \\\n           counter == 17 or \\\n           counter == 20 or \\\n           counter == 25 or \\\n           counter == 30 or \\\n           counter == 34 or \\\n           counter == 39 :\n                continue\n\n        GPIO.setup(counter, GPIO.OUT)\n        GPIO.output(counter,GPIO.HIGH)\n        time.sleep(1)\n\nfor counter in range (1, n+1):\n        if counter == 1 or \\\n           counter == 2 or \\\n           counter == 4 or \\\n           counter == 6 or \\\n           counter == 9 or \\\n           counter == 14 or \\\n           counter == 17 or \\\n           counter == 20 or \\\n           counter == 25 or \\\n           counter == 30 or \\\n           counter == 34 or \\\n           counter == 39 :\n                continue\n\n        GPIO.output(counter,GPIO.LOW)\n        time.sleep(1)\n")),(0,l.kt)("p",null,"To run the python sample code by the following commands:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"sudo python forloop.py")),(0,l.kt)("p",null,"Ps: Please reference the pin value by \u2018gpio readall\u2019."),(0,l.kt)("h3",{id:"application-note-for-tinker-board-2-series"},"Application note for Tinker Board 2 series:"),(0,l.kt)("p",null,"Due to hardware design limitations of certain pins, some designs incorporate level shifters, so there are a few things to keep in mind when using them."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The location of pins with level shifter:"),(0,l.kt)("li",{parentName:"ul"},"Pins number: 7, 13, 15, 16, 18, 26\n",(0,l.kt)("img",{parentName:"li",src:"https://user-images.githubusercontent.com/97945168/192920845-185e949e-ca3d-4d22-ab8c-8c41af04dea7.png",alt:"image"}))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Precautions for use:")),(0,l.kt)("p",null,"If used as a GPI"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A pull-up/ pull-down resistor is needed to automatically restore the default state."),(0,l.kt)("li",{parentName:"ul"},"If default status=1, need to add an external pull-up resistor and must be less than 1.65K\u03a9."),(0,l.kt)("li",{parentName:"ul"},"If default status=0, it is recommended to use 100K\u03a9 resistor to pull-down."),(0,l.kt)("li",{parentName:"ul"},"This pin can no longer be set to GPO by the software (unless the external resistor design is modified!).")),(0,l.kt)("p",null,"Requirements in the datasheet for input:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/97945168/192922029-1f36e537-d083-43f2-a102-5ac168efdad1.png",alt:"1"})),(0,l.kt)("p",null,"Recommended circuits:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/97945168/192922637-8e17a1a8-ebfb-49c1-acc8-1bc7e333636c.png",alt:"2"})),(0,l.kt)("h3",{id:"application-note-for-tinker-edge-r"},"Application note for Tinker Edge R:"),(0,l.kt)("p",null,"Due to hardware design limitations of certain pins, some designs incorporate level shifters, so there are a few things to keep in mind when using them."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The location of pins with level shifter:"),(0,l.kt)("li",{parentName:"ul"},"Pins number: 7, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 26, 29, 31, 35, 38, 40\n",(0,l.kt)("img",{parentName:"li",src:"https://user-images.githubusercontent.com/97945168/194475856-ebcb8127-677e-4edc-9fd5-7b80c5bd22d5.png",alt:"image"}))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Precautions for use:")),(0,l.kt)("p",null,"If used as a GPI"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A pull-up/ pull-down resistor is needed to automatically restore the default state."),(0,l.kt)("li",{parentName:"ul"},"If default status=1, need to add an external pull-up resistor and must be less than 1.65K\u03a9."),(0,l.kt)("li",{parentName:"ul"},"If default status=0, it is recommended to use 100K\u03a9 resistor to pull-down."),(0,l.kt)("li",{parentName:"ul"},"This pin can no longer be set to GPO by the software (unless the external resistor design is modified!).")),(0,l.kt)("p",null,"Requirements in the datasheet for input:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/97945168/192922029-1f36e537-d083-43f2-a102-5ac168efdad1.png",alt:"1"})),(0,l.kt)("p",null,"Recommended circuits:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/97945168/192922637-8e17a1a8-ebfb-49c1-acc8-1bc7e333636c.png",alt:"2"})),(0,l.kt)("h2",{id:"4-power-management-tool"},"4. Power management tool"),(0,l.kt)("h3",{id:"debian-only"},"Debian only"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Open a terminal in full screen mode and run the following command:"),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"$ tinker-power-management"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Adjust CPU or GPU Governor:"),(0,l.kt)("p",{parentName:"li"},"a. Press 'C' or 'G' to open the menu. 'C' is for CPU Governor and 'G' is for GPU Governor. "),(0,l.kt)("p",{parentName:"li"},'There are 4 options to select: "auto", "manual", "powersave", and "performance".'),(0,l.kt)("p",{parentName:"li"},"b. Use the left or right arrow key to select. Option selected is shown in bold."),(0,l.kt)("p",{parentName:"li"},"Press the space bar to confirm, or press 'q' to cancel. ")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Adjust CPU frequency:"),(0,l.kt)("p",{parentName:"li"},'a. Follow Step 2 above to adjust CPU or GPU Governor to "manual"'),(0,l.kt)("p",{parentName:"li"},"b. Take CPU as example:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},'When CPU Governor = manual, options for CPU frequency adjustment will be highlighted.\n\nThere are 4 options: "min.freq for A53", "max.freq for A53", "min.freq for A72", and "max.freq for A72".\n\nUse the arrow keys to select. Option selected is shown in bold.\n\nPress the space bar to confirm and open the selected CPU frequency menu.\n\nFollow step 2. to adjust CPU or GPU Governor.\n')),(0,l.kt)("p",{parentName:"li"},"c. Once the frequency menu is shown"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"Use the left or right arrow key to select. Option selected is shown in bold.\n\nPress the space bar to confirm, or press 'Q' to cancel. \n")),(0,l.kt)("p",{parentName:"li"},"Frequency menu needs to be confirmed or closed before adjusting CPU or GPU Governor again.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},'Press "Ctrl" + "C" to exit Tinker Power Management anytime. '))),(0,l.kt)("h2",{id:"5-swapfile"},"5. Swapfile"),(0,l.kt)("p",null,"Follow along the steps to use eMMC as swap: "),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"sudo mkdir /media/linaro/emmc "))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"add command line below in  ",(0,l.kt)("inlineCode",{parentName:"p"},"sudo vi /etc/fstab")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"/dev/mmcblk1p1  /media/linaro/emmc           ext4        defaults      1      1 \n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"sudo mount -a"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"df"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"sudo vi /etc/dphys-swapfile")," to adjust the size and location of the swap"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"CONF_SWAPFILE=/media/linaro/emmc/swap\nCONF_SWAPSIZE=1000 #(Unit = MB, so it'd be 1G)\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"sudo service dphys-swapfile restart"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"sudo swapon")," and the result prints"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"linaro@tinkerboard:/media/linaro/emmc$ sudo swapon\nNAME                    TYPE  SIZE USED PRIO\n/var/swap               file  100M   0B   -1\n/media/linaro/emmc/swap file 1000M   0B   -2\n")))),(0,l.kt)("p",null,"Reference:\n",(0,l.kt)("a",{parentName:"p",href:"https://manpages.debian.org/buster/dphys-swapfile/dphys-swapfile.8.en.html"},"https://manpages.debian.org/buster/dphys-swapfile/dphys-swapfile.8.en.html")),(0,l.kt)("h2",{id:"6-opencv-how-to-install"},"6. OpenCV how to install"),(0,l.kt)("h3",{id:"install-library-from-debian-repo"},"Install library from Debian repo"),(0,l.kt)("p",null,"OpenCV for Python:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"$ sudo apt-get update \n$ sudo apt-get install python-dev python-opencv\n")),(0,l.kt)("p",null,"OpenCV for Python3:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"$ sudo apt-get update\n$ sudo apt-get install python3-dev python3-opencv\n")),(0,l.kt)("p",null,"Confirm the Opencv library"),(0,l.kt)("p",null,"OpenCV for Python:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'$ python -c "import cv2; print(cv2.__version__)"\n')),(0,l.kt)("p",null,"OpenCV for Python3:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ python3 -c "import cv2; print(cv2.__version__)"\n')),(0,l.kt)("h3",{id:"install-opencv-manually"},"Install OpenCV manually"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Install the required packages"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"$ sudo apt-get update\n$ sudo apt-get -y upgrade\n$ sudo apt-get -y install aptitude\n$ sudo apt-get aptitude libavcodec-dev\n$ sudo apt-get -y install build-essential cmake git pkg-config libgtk-3-dev \\\n    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \\\n    libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \\\n    gfortran openexr libatlas-base-dev python3-dev python3-numpy \\\n    libtbb2 libtbb-dev libdc1394-22-dev`\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Clone the OpenCV\u2019s and OpenCV contrib repositories with the following commands:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"$ mkdir ~/opencv_build && cd ~/opencv_build\n$ git clone https://github.com/opencv/opencv.git\n$ git clone https://github.com/opencv/opencv_contrib.git\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Set up the build"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"$ cd ~/opencv_build/opencv\n$ mkdir build && cd build\n$ cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D INSTALL_C_EXAMPLES=ON \\\n    -D INSTALL_PYTHON_EXAMPLES=ON \\\n    -D OPENCV_GENERATE_PKGCONFIG=ON \\\n    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib/modules \\\n    -D BUILD_EXAMPLES=ON ..\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Build & install OpenCV"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"$ make -j4\n$ sudo make install\n")))),(0,l.kt)("p",null,"Reference:\n",(0,l.kt)("a",{parentName:"p",href:"https://linuxize.com/post/how-to-install-opencv-on-debian-10/"},"https://linuxize.com/post/how-to-install-opencv-on-debian-10/")),(0,l.kt)("h2",{id:"7-tinker-config-application"},"7. Tinker Config Application"),(0,l.kt)("h3",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"Tinker Config is an Android-based application that offers flexibility\nand an easy way to configure I/O interfaces on 40pin header, DSI/CSI\nconnectors as well as Linux kernel Devicetree overlays while using\nTinker Board 2S."),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/51226852/159633579-886fcfa4-9a02-47a4-bbcb-6f727fcd23fa.png",alt:"1"})),(0,l.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"Tinker Board 2S with Android OS v.2.0.6 (or later) installed. For image\ninstallation, please visit Tinker Board's ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/TinkerBoard/TinkerBoard/wiki/User-Guide#flash-image"},"wiki\npage"),"\non Github."),(0,l.kt)("p",null,"Optional: hardware accessories such as LED modules, monitors ... etc."),(0,l.kt)("p",null,"Tinker Config is built-in and can be found in the app list."),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/51226852/159661220-dda03c39-22ac-48f6-9547-56386e2c91a6.png",alt:"2"})),(0,l.kt)("h3",{id:"features"},"Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"*Interfaces:")," allows users to configure functions for 40 pin GPIO\nheader. The complete GPIO config table can be found on ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/TinkerBoard/TinkerBoard/wiki/User-Guide#gpio-config-table-for-tinker-board-2-series"},"Github\nwiki"),".\nBelow are the supported functions:*")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"UART Settings: UART0, UART4"),(0,l.kt)("p",{parentName:"blockquote"},"I2C Settings: I2C6, I2C7"),(0,l.kt)("p",{parentName:"blockquote"},"I2S Settings: I2S0"),(0,l.kt)("p",{parentName:"blockquote"},"SPI Settings: SPI1, SPI5"),(0,l.kt)("p",{parentName:"blockquote"},"PWM Settings: PWM0, PWM1, PWM3A")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/51226852/159636738-1c8c4ca7-14a3-4e0f-b6f6-e9e16b40fdb5.png",alt:"3"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("em",{parentName:"p"},"Note: Changes will not take effect immediately, please reboot the\nboard each time after changes are made."))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"*Linux Kernel Devicetree Overlays:")," The display controller of\nTinker Board 2S is called VOP (Visual Output Processor) and it's\nused to transfer image data from video memory to different types of\ninterface.*")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"There are two VOPs in Tinker Board 2S:")," VOPB supports up to 4K\nresolution, and VOPL supports up to 2560x1440 resolution."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},'The default setting for HDMI is VOPB, and it can be configured to VOPL\nby checking "HDMI_VOPL" in Tinker Config; the default setting for DP is\nVOPL, and it can be configured to VOPB by checking "DP_VOPB" in Tinker\nConfig. For other DSI such as MIPI or DAC, simply tick the box (one at a\ntime) to change configuration.')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Device tree blob (DTB) supported include: DP_VOPB, HDMI_VOPL,\nconsole-uart-overlay, hifiberry-dacplus-overlay, mipi2edp_G156HAB02,\nmipi2lvds_G133HAN01, mipi2lvds_G156BGE-L01, mipi2lvds_G185XW01,\nmipi2lvds_G240HVT01, mipi2lvds_LM215WFF3-SLN1")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/51226852/159636899-fae02698-bf77-4c91-87cb-1e3ec644683c.png",alt:"4"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("em",{parentName:"p"},"Note: Changes will not take effect immediately, please reboot the\nboard each time after changes are made."))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"*Application Whitelisting:")," allows users to prevent running\napplications being terminated when out of memory (OOM) occurred.\nApplications ticked in the Whitelist will be allowed running when\nOOM.*")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/51226852/159637299-87234860-9442-4963-aa5b-abedfe3edda3.png",alt:"5"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("em",{parentName:"p"},"Note: Changes will not take effect immediately, please reboot the\nboard each time after changes are made."))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"*Power Management:")," users can scale the CPU and GPU frequency in\norder to either save power or enhance improvement. Below are the\nsupported options of power policies:*")),(0,l.kt)("p",null,"CPU:"),(0,l.kt)("p",null,"Governor: interactive, performance, powersave"),(0,l.kt)("p",null,"Little Core Min Frequency: 408000, 600000, 816000, 1008000, 1200000,\n1416000, 1512000"),(0,l.kt)("p",null,"Little Core Max Frequency: 408000, 600000, 816000, 1008000, 1200000,\n1416000, 1512000"),(0,l.kt)("p",null,"Big Core Min Frequency: 408000, 600000, 816000, 1008000, 1200000,\n1416000, 1512000"),(0,l.kt)("p",null,"Big Core Max Frequency: 408000, 600000, 816000, 1008000, 1200000,\n1416000, 1512000"),(0,l.kt)("p",null,"GPU:"),(0,l.kt)("p",null,"Governor: simple_ondemand, performance, powersave"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/51226852/159637718-b2077846-f61f-4d1e-9547-5494476fddb2.png",alt:"6"}),"\n",(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/51226852/159637728-4b89c071-fa88-48f7-bf1f-c80ba6f91498.png",alt:"7"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("em",{parentName:"p"},"Note: Changes will not take effect immediately, please reboot the\nboard each time after changes are made."))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("em",{parentName:"strong"},"Boot Logo: This feature allows user to change the image shown\nwhen the board is booting.")))),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},'Select an image (size limit: 233k pixels / 700KB), click "Change\nimage", and click "Apply".')),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/51226852/159638114-2e8d8b1a-80f6-438b-8d67-54ec7344987c.png",alt:"8"}),"\n",(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/51226852/159638133-8069fc58-e80b-495c-924c-a3b6671df4e9.png",alt:"9"})),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Reboot to make the change take effect.")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/51226852/159637967-6b4ec2d6-db7e-404a-8ffe-9e6dc4a39fd3.png",alt:"10"})),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The boot image change stays even when the board is reset to factory\nsettings. Please wipe and re-flash the OS image to change boot logo back\nto default settings.")),(0,l.kt)("h2",{id:"8-fan-control"},"8. Fan Control"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"For Tinker Board 2 / Tinker Board 2S"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The FAN connector offers ",(0,l.kt)("strong",{parentName:"p"},"500mA maximum")," by hardware design.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"It provides be controlled High/Low speed by software and kindly find the control method below:"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"High speed")," setting on ",(0,l.kt)("strong",{parentName:"p"},"FAN_SPD_CTRL")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},'sudo -i\necho "154" > /sys/class/gpio/export\necho "out" > /sys/class/gpio/gpio154/direction\necho "1" > /sys/class/gpio/gpio154/value\n'))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Low speed")," setting on ",(0,l.kt)("strong",{parentName:"p"},"FAN_SPD_CTRL")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},'echo "0" > /sys/class/gpio/gpio154/value\n')))))))}s.isMDXComponent=!0}}]);